# Generated by Django 3.2.12 on 2022-03-06 04:11

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventsappMasterTable',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('event_title', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('country', models.CharField(blank=True, max_length=30, null=True)),
                ('datetimes', models.CharField(blank=True, max_length=50, null=True)),
                ('event_type', models.IntegerField(blank=True, null=True)),
                ('max_age', models.IntegerField(blank=True, null=True)),
                ('min_age', models.IntegerField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=30, null=True)),
                ('province', models.CharField(blank=True, max_length=30, null=True)),
                ('skill', models.CharField(blank=True, max_length=30, null=True)),
                ('sport_category', models.CharField(blank=True, max_length=30, null=True)),
                ('sport_type', models.CharField(blank=True, max_length=30, null=True)),
                ('venue', models.CharField(blank=True, max_length=30, null=True)),
                ('no_of_position', models.IntegerField(blank=True, null=True)),
                ('position_cost', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'EventsApp_master_table',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EventsappTestCity',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('test_country', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='EventsApp.eventsappmastertable')),
            ],
            options={
                'db_table': 'EventsApp_test_city',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IsEventsDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ed_id', models.IntegerField()),
                ('ed_fk_em_id', models.IntegerField(blank=True, null=True)),
                ('ed_fk_sc_id', models.IntegerField(blank=True, null=True)),
                ('ed_fk_sm_id', models.IntegerField(blank=True, null=True)),
                ('ed_fk_sp_id', models.IntegerField(blank=True, null=True)),
                ('ed_fk_spc_id', models.IntegerField(blank=True, null=True)),
                ('ed_fk_sports_position_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('ed_created_date', models.DateTimeField(blank=True, null=True)),
                ('ed_created_by', models.IntegerField(blank=True, null=True)),
                ('ed_updated_by', models.IntegerField(blank=True, null=True)),
                ('ed_updated_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'is_events_details',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IsEventsMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('em_id', models.IntegerField()),
                ('em_title', models.CharField(blank=True, max_length=100, null=True)),
                ('em_desc', models.CharField(blank=True, max_length=250, null=True)),
                ('em_fk_etm_id', models.IntegerField(blank=True, null=True)),
                ('em_gender', models.CharField(blank=True, max_length=10, null=True)),
                ('em_isactive', models.CharField(blank=True, max_length=1, null=True)),
                ('em_created_date', models.DateTimeField(blank=True, null=True)),
                ('em_created_by', models.IntegerField(blank=True, null=True)),
                ('em_updated_by', models.IntegerField(blank=True, null=True)),
                ('em_updated_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'is_events_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IsEventsNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('en_id', models.IntegerField()),
                ('en_fk_em_id', models.IntegerField(blank=True, null=True)),
                ('en_fk_nm_id', models.IntegerField(blank=True, null=True)),
                ('en_created_by', models.IntegerField(blank=True, null=True)),
                ('en_updated_by', models.IntegerField(blank=True, null=True)),
                ('en_updated_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'is_events_notification',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IsEventsScheduler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_id', models.IntegerField()),
                ('es_fk_em_id', models.IntegerField(blank=True, null=True)),
                ('es_from_date', models.DateTimeField(blank=True, null=True)),
                ('es_to_date', models.DateTimeField(blank=True, null=True)),
                ('es_venue_name', models.CharField(blank=True, max_length=100, null=True)),
                ('es_event_venue_street', models.CharField(blank=True, max_length=100, null=True)),
                ('es_event_venue_city', models.CharField(blank=True, max_length=50, null=True)),
                ('es_event_venue_province', models.CharField(blank=True, max_length=50, null=True)),
                ('es_event_venue_country', models.CharField(blank=True, max_length=100, null=True)),
                ('es_event_venue_zip', models.CharField(blank=True, max_length=6, null=True)),
                ('em_fk_etm_id', models.IntegerField(blank=True, null=True)),
                ('es_fk_ef_id', models.IntegerField(blank=True, null=True)),
                ('es_min_age', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('es_max_age', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('em_isactive', models.CharField(blank=True, max_length=1, null=True)),
                ('es_created_date', models.DateTimeField(blank=True, null=True)),
                ('es_created_by', models.IntegerField(blank=True, null=True)),
                ('es_updated_by', models.IntegerField(blank=True, null=True)),
                ('es_updated_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'is_events_scheduler',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IsEventTypeMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etm_id', models.IntegerField()),
                ('etm_category', models.CharField(blank=True, max_length=100, null=True)),
                ('etm_title', models.CharField(blank=True, max_length=100, null=True)),
                ('etm_description', models.CharField(blank=True, max_length=250, null=True)),
                ('etm_isactive', models.CharField(blank=True, max_length=1, null=True)),
                ('etm_created_by', models.IntegerField(blank=True, null=True)),
                ('etm_updated_by', models.IntegerField(blank=True, null=True)),
                ('etm_updated_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'is_event_type_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IsNotificationMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nm_id', models.IntegerField()),
                ('nm_title', models.CharField(blank=True, max_length=100, null=True)),
                ('nm_description', models.CharField(blank=True, max_length=250, null=True)),
                ('nm_trigger', models.CharField(blank=True, max_length=10, null=True)),
                ('nm_trigger_frequency', models.CharField(blank=True, max_length=10, null=True)),
                ('nm_isactive', models.CharField(blank=True, max_length=1, null=True)),
                ('nm_created_by', models.IntegerField(blank=True, null=True)),
                ('nm_updated_by', models.IntegerField(blank=True, null=True)),
                ('nm_updated_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'is_notification_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IsSportsCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sc_id', models.IntegerField()),
                ('sc_sports_catgeory', models.CharField(max_length=100)),
                ('sc_created_by', models.IntegerField(blank=True, null=True)),
                ('sc_created_date', models.DateTimeField(blank=True, null=True)),
                ('sc_updated_by', models.IntegerField(blank=True, null=True)),
                ('sc_updated_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'is_sports_category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IsSportsDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sd_id', models.IntegerField()),
                ('sd_fk_sc_id', models.IntegerField(blank=True, null=True)),
                ('sd_fk_sm_id', models.IntegerField(blank=True, null=True)),
                ('sd_fk_sp_id', models.IntegerField(blank=True, null=True)),
                ('sd_created_by', models.IntegerField(blank=True, null=True)),
                ('sd_created_date', models.DateTimeField(blank=True, null=True)),
                ('sd_updated_by', models.IntegerField(blank=True, null=True)),
                ('sd_updated_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'is_sports_details',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IsSportsMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sm_id', models.IntegerField()),
                ('sm_sports_name', models.CharField(max_length=100)),
                ('sm_created_by', models.IntegerField(blank=True, null=True)),
                ('sm_created_date', models.DateTimeField(blank=True, null=True)),
                ('sm_updated_by', models.IntegerField(blank=True, null=True)),
                ('sm_updated_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.CharField(blank=True, max_length=1, null=True)),
                ('sm_fk_sc_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'is_sports_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IsSportsPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sp_id', models.IntegerField()),
                ('sp_fk_sc_id', models.IntegerField(blank=True, null=True)),
                ('sp_position_name', models.CharField(max_length=100)),
                ('sp_created_by', models.IntegerField(blank=True, null=True)),
                ('sp_created_date', models.DateTimeField(blank=True, null=True)),
                ('sp_updated_by', models.IntegerField(blank=True, null=True)),
                ('sp_updated_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'is_sports_position',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IsSportsProficiency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spc_id', models.IntegerField()),
                ('spc_prof_name', models.CharField(blank=True, max_length=100, null=True)),
                ('spc_created_date', models.DateTimeField(blank=True, null=True)),
                ('spc_updated_by', models.IntegerField(blank=True, null=True)),
                ('spc_updated_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'is_sports_proficiency',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IsVenueMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vm_id', models.IntegerField()),
                ('vm_name', models.CharField(blank=True, max_length=100, null=True)),
                ('vm_venue_description', models.CharField(blank=True, max_length=250, null=True)),
                ('vm_venue_street', models.CharField(blank=True, max_length=250, null=True)),
                ('vm_venuecity', models.CharField(blank=True, max_length=50, null=True)),
                ('vm_venue_province', models.CharField(blank=True, max_length=50, null=True)),
                ('vm_venue_country', models.CharField(blank=True, max_length=50, null=True)),
                ('vm_venue_zip', models.CharField(blank=True, max_length=6, null=True)),
                ('vm_isactive', models.CharField(blank=True, max_length=1, null=True)),
                ('vm_created_by', models.IntegerField(blank=True, null=True)),
                ('vm_updated_by', models.IntegerField(blank=True, null=True)),
                ('vm_updated_date', models.DateTimeField(blank=True, null=True)),
                ('venu_name', models.CharField(blank=True, max_length=17, null=True)),
            ],
            options={
                'db_table': 'is_venue_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='master_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_title', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('event_type', models.IntegerField(blank=True, null=True)),
                ('datetimes', models.CharField(blank=True, max_length=50, null=True)),
                ('sport_category', models.CharField(blank=True, max_length=30, null=True)),
                ('sport_type', models.CharField(blank=True, max_length=30, null=True)),
                ('position', models.CharField(blank=True, max_length=30, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('skill', models.CharField(blank=True, max_length=30, null=True)),
                ('max_age', models.IntegerField(blank=True, null=True)),
                ('min_age', models.IntegerField(blank=True, null=True)),
                ('venue', models.CharField(blank=True, max_length=30, null=True)),
                ('province', models.CharField(blank=True, max_length=30, null=True)),
                ('country', models.CharField(blank=True, max_length=30, null=True)),
                ('no_of_position', models.IntegerField(blank=True, null=True)),
                ('position_cost', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'master_table',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Test_City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True)),
                ('test_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EventsApp.master_table')),
            ],
            options={
                'db_table': 'Test_City',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_individual', models.BooleanField(default=False)),
                ('is_organization', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=40, null=True)),
                ('last_name', models.CharField(max_length=40, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='EventsApp.user')),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('phone', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='EventsApp.user')),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('phone', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Test_Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('test_city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='EventsApp.test_city')),
                ('test_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='EventsApp.master_table')),
            ],
            options={
                'db_table': 'Test_Person',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EventsappTestPerson',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('test_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='EventsApp.eventsapptestcity')),
                ('test_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='EventsApp.eventsappmastertable')),
            ],
            options={
                'db_table': 'EventsApp_test_person',
                'managed': True,
            },
        ),
    ]
